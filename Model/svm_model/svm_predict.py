import joblib
import numpy as np

def load_model_and_vectorizer(model_path, vectorizer_path):
    model = joblib.load(model_path)
    vectorizer = joblib.load(vectorizer_path)
    return model, vectorizer

def detect_url(url, model, vectorizer):
    url_vectorized = vectorizer.transform([url])
    prob = model.predict_proba(url_vectorized)[0][1]
    label = model.predict(url_vectorized)[0]
    return label, prob

if __name__ == "__main__":
    model_path = 'svm_model_no_crawl.joblib'
    vectorizer_path = 'tfidf_vectorizer_no_crawl.joblib'
    try:
        model, vectorizer = load_model_and_vectorizer(model_path, vectorizer_path)
        print("MÃ´ hÃ¬nh vÃ  vectorizer Ä‘Ã£ Ä‘Æ°á»£c táº£i thÃ nh cÃ´ng.")
    except FileNotFoundError:
        print("KhÃ´ng tÃ¬m tháº¥y tá»‡p mÃ´ hÃ¬nh hoáº·c vectorizer. Vui lÃ²ng kiá»ƒm tra láº¡i.")
        exit()

    print("\n=== PhÃ¡t hiá»‡n URL Phishing ===")
    while True:
        url = input("Nháº­p URL cáº§n kiá»ƒm tra (hoáº·c nháº­p 'exit' Ä‘á»ƒ thoÃ¡t): ").strip()
        if url.lower() == 'exit':
            print("Káº¿t thÃºc chÆ°Æ¡ng trÃ¬nh. Háº¹n gáº·p láº¡i!")
            break
        elif url == "":
            print("URL khÃ´ng Ä‘Æ°á»£c Ä‘á»ƒ trá»‘ng. Vui lÃ²ng nháº­p láº¡i.")
            continue

        label, prob = detect_url(url, model, vectorizer)
        if label == 0:
            print(f"ðŸ”´ URL '{url}' Ä‘Æ°á»£c dá»± Ä‘oÃ¡n lÃ  PHISHING (XÃ¡c suáº¥t: {1-prob:.2f}).")
        else:
            print(f"ðŸŸ¢ URL '{url}' Ä‘Æ°á»£c dá»± Ä‘oÃ¡n lÃ  AN TOÃ€N (XÃ¡c suáº¥t: {prob:.2f}).")
